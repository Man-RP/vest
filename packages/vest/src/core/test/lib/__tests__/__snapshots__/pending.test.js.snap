// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`module: pending export: removePending When testObject is either pending or lagging When in lagging Should remove test from lagging 1`] = `
Object {
  "optionalFields": Object {},
  "pending": Object {
    "lagging": Array [],
    "pending": Array [],
  },
  "skippedTests": Array [],
  "suiteId": Object {
    "id": 1000,
    "name": "suite_name",
  },
  "testCallbacks": Object {
    "doneCallbacks": Array [],
    "fieldCallbacks": Object {},
  },
  "testObjects": Array [],
}
`;

exports[`module: pending export: removePending When testObject is either pending or lagging When in pending Should remove test from pending 1`] = `
Object {
  "optionalFields": Object {},
  "pending": Object {
    "lagging": Array [],
    "pending": Array [],
  },
  "skippedTests": Array [],
  "suiteId": Object {
    "id": 1000,
    "name": "suite_name",
  },
  "testCallbacks": Object {
    "doneCallbacks": Array [],
    "fieldCallbacks": Object {},
  },
  "testObjects": Array [],
}
`;

exports[`module: pending export: setPending Should set supplied test object as pending 1`] = `
Object {
  "optionalFields": Object {},
  "pending": Object {
    "lagging": Array [],
    "pending": Array [
      Object {
        "cancel": [Function],
        "fail": [Function],
        "fieldName": "test_0",
        "groupName": "group_name",
        "id": "4",
        "isWarning": false,
        "setStatus": [Function],
        "statement": "Some statement string",
        "status": "untested",
        "testFn": [MockFunction],
        "valueOf": [Function],
        "warn": [Function],
      },
    ],
  },
  "skippedTests": Array [],
  "suiteId": Object {
    "id": 1000,
    "name": "suite_name",
  },
  "testCallbacks": Object {
    "doneCallbacks": Array [],
    "fieldCallbacks": Object {},
  },
  "testObjects": Array [],
}
`;

exports[`module: pending export: setPending When a field of the same profile is in lagging array Should remove test from lagging array 1`] = `
Object {
  "optionalFields": Object {},
  "pending": Object {
    "lagging": Array [
      Object {
        "cancel": [Function],
        "fail": [Function],
        "fieldName": "test_2",
        "id": "12",
        "isWarning": false,
        "setStatus": [Function],
        "statement": "Some statement string",
        "status": "untested",
        "testFn": [MockFunction],
        "valueOf": [Function],
        "warn": [Function],
      },
      Object {
        "cancel": [Function],
        "fail": [Function],
        "fieldName": "test_1",
        "id": "11",
        "isWarning": false,
        "setStatus": [Function],
        "statement": "Some statement string",
        "status": "untested",
        "testFn": [MockFunction],
        "valueOf": [Function],
        "warn": [Function],
      },
    ],
    "pending": Array [
      Object {
        "cancel": [Function],
        "fail": [Function],
        "fieldName": "test_0",
        "groupName": "group_name",
        "id": "15",
        "isWarning": false,
        "setStatus": [Function],
        "statement": "failure message",
        "status": "untested",
        "testFn": [MockFunction],
        "valueOf": [Function],
        "warn": [Function],
      },
    ],
  },
  "skippedTests": Array [],
  "suiteId": Object {
    "id": 1000,
    "name": "suite_name",
  },
  "testCallbacks": Object {
    "doneCallbacks": Array [],
    "fieldCallbacks": Object {},
  },
  "testObjects": Array [],
}
`;
